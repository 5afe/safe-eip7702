{
  "address": "0xF086D01b8C0AF21523CFA7DAF7C2D9fd17279109",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "modules",
          "type": "address[]"
        }
      ],
      "name": "enableModules",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fe13ff0768f2aeb66af895e06501a790",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"modules\",\"type\":\"address[]\"}],\"name\":\"enableModules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"bounty@safe.global\",\"details\":\"The Safe `setup` function accepts `to` and `data` parameters for a delegate call during initialization. This      contract can be specified as the `to` with `data` ABI encoding the `enableModules` call so that a Safe is      created with the specified modules. In particular, this allows a ERC-4337 compatible Safe to be created as part      of a ERC-4337 user operation with the `Safe4337Module` enabled right away.\",\"kind\":\"dev\",\"methods\":{\"enableModules(address[])\":{\"details\":\"This call will only work if used from a Safe via delegatecall. It is intended to be used as part of the      Safe `setup`, allowing Safes to be created with an initial set of enabled modules.\",\"params\":{\"modules\":\"The modules to enable.\"}}},\"title\":\"SafeModuleSetup - A utility contract for setting up a Safe with modules.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"enableModules(address[])\":{\"notice\":\"Enable the specified Safe modules.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeModuleSetup.sol\":\"SafeModuleSetup\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/SafeModuleSetup.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.27;\\n\\nimport {ISafe} from \\\"./interfaces/ISafe.sol\\\";\\n\\n/**\\n * @title SafeModuleSetup - A utility contract for setting up a Safe with modules.\\n * @dev The Safe `setup` function accepts `to` and `data` parameters for a delegate call during initialization. This\\n *      contract can be specified as the `to` with `data` ABI encoding the `enableModules` call so that a Safe is\\n *      created with the specified modules. In particular, this allows a ERC-4337 compatible Safe to be created as part\\n *      of a ERC-4337 user operation with the `Safe4337Module` enabled right away.\\n * @custom:security-contact bounty@safe.global\\n */\\ncontract SafeModuleSetup {\\n    /**\\n     * @notice Enable the specified Safe modules.\\n     * @dev This call will only work if used from a Safe via delegatecall. It is intended to be used as part of the\\n     *      Safe `setup`, allowing Safes to be created with an initial set of enabled modules.\\n     * @param modules The modules to enable.\\n     */\\n    function enableModules(address[] calldata modules) external {\\n        for (uint256 i = 0; i < modules.length; i++) {\\n            ISafe(address(this)).enableModule(modules[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x60f33c8112f57ba39806adf1df0a403320b126e1111633e0d84162df48276fe9\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ISafe.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.27;\\n\\ninterface ISafe {\\n    /**\\n     * @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n     * @param to Destination address of module transaction.\\n     * @param value Ether value of module transaction.\\n     * @param data Data payload of module transaction.\\n     * @param operation Operation type of module transaction.\\n     */\\n    function execTransactionFromModule(address to, uint256 value, bytes memory data, uint8 operation) external returns (bool success);\\n\\n    /**\\n     * @notice Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data\\n     * @param to Destination address of module transaction.\\n     * @param value Ether value of module transaction.\\n     * @param data Data payload of module transaction.\\n     * @param operation Operation type of module transaction.\\n     * @return success Boolean flag indicating if the call succeeded.\\n     * @return returnData Data returned by the call.\\n     */\\n    function execTransactionFromModuleReturnData(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        uint8 operation\\n    ) external returns (bool success, bytes memory returnData);\\n\\n    /**\\n     * @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\\n     * @param dataHash Hash of the data (could be either a message hash or transaction hash)\\n     * @param data That should be signed (this is passed to an external validator contract)\\n     * @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\\n     */\\n    function checkSignatures(bytes32 dataHash, bytes memory data, bytes memory signatures) external view;\\n\\n    /**\\n     * @dev Returns the domain separator for this contract, as defined in the EIP-712 standard.\\n     * @return bytes32 The domain separator hash.\\n     */\\n    function domainSeparator() external view returns (bytes32);\\n\\n    /**\\n     * @dev Returns array of modules.\\n     * @param start Start of the page.\\n     * @param pageSize Maximum number of modules that should be returned.\\n     * @return array Array of modules.\\n     * @return next Start of the next page.\\n     */\\n    function getModulesPaginated(address start, uint256 pageSize) external view returns (address[] memory array, address next);\\n\\n    /**\\n     * @notice Enables the module `module` for the Safe.\\n     * @dev This can only be done via a Safe transaction.\\n     * @param module Module to be enabled.\\n     */\\n    function enableModule(address module) external;\\n\\n    /**\\n     * @notice Returns the number of required confirmations for a Safe transaction aka the threshold.\\n     * @return Threshold number.\\n     */\\n    function getThreshold() external view returns (uint256);\\n\\n    function getOwners() external view returns (address[] memory);\\n\\n    function getStorageAt(uint256 offset, uint256 length) external view returns (bytes memory);\\n\\n    function nonce() external view returns (uint256);\\n\\n    function execTransaction(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        uint8 operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver,\\n        bytes memory signatures\\n    ) external payable returns (bool);\\n\\n    function getTransactionHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        uint8 operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address refundReceiver,\\n        uint256 _nonce\\n    ) external view returns (bytes32);\\n\\n    function setFallbackHandler(address handler) external;\\n\\n    function isModuleEnabled(address module) external view returns (bool);\\n\\n    function isOwner(address owner) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4b206c871862616de6e2d368f7855a637f4dcf7591b7ceec6615cb61f59ca626\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506102258061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638d0dc49f14610030575b600080fd5b61004361003e36600461010c565b610045565b005b60005b81811015610107573063610b592584848481811061006857610068610183565b905060200201602081019061007d91906101b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b5050600190920191506100489050565b505050565b6000806020838503121561011f57600080fd5b823567ffffffffffffffff81111561013657600080fd5b8301601f8101851361014757600080fd5b803567ffffffffffffffff81111561015e57600080fd5b8560208260051b840101111561017357600080fd5b6020919091019590945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156101c457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101e857600080fd5b939250505056fea2646970667358221220cc0532c570b197ffc3a947d6d651d236c784102c51a4962a4031bb3d7a09897364736f6c634300081b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638d0dc49f14610030575b600080fd5b61004361003e36600461010c565b610045565b005b60005b81811015610107573063610b592584848481811061006857610068610183565b905060200201602081019061007d91906101b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b5050600190920191506100489050565b505050565b6000806020838503121561011f57600080fd5b823567ffffffffffffffff81111561013657600080fd5b8301601f8101851361014757600080fd5b803567ffffffffffffffff81111561015e57600080fd5b8560208260051b840101111561017357600080fd5b6020919091019590945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156101c457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101e857600080fd5b939250505056fea2646970667358221220cc0532c570b197ffc3a947d6d651d236c784102c51a4962a4031bb3d7a09897364736f6c634300081b0033",
  "devdoc": {
    "custom:security-contact": "bounty@safe.global",
    "details": "The Safe `setup` function accepts `to` and `data` parameters for a delegate call during initialization. This      contract can be specified as the `to` with `data` ABI encoding the `enableModules` call so that a Safe is      created with the specified modules. In particular, this allows a ERC-4337 compatible Safe to be created as part      of a ERC-4337 user operation with the `Safe4337Module` enabled right away.",
    "kind": "dev",
    "methods": {
      "enableModules(address[])": {
        "details": "This call will only work if used from a Safe via delegatecall. It is intended to be used as part of the      Safe `setup`, allowing Safes to be created with an initial set of enabled modules.",
        "params": {
          "modules": "The modules to enable."
        }
      }
    },
    "title": "SafeModuleSetup - A utility contract for setting up a Safe with modules.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "enableModules(address[])": {
        "notice": "Enable the specified Safe modules."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}